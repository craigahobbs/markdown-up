# Licensed under the MIT License
# https://github.com/craigahobbs/markdown-up/blob/main/LICENSE


async function testDiffSentinel():
    unittestEqual(systemGlobalGet('diffSentinel'), true)
    systemGlobalSet('diffSentinel', 1)
    include '../diff.bare'
    unittestEqual(systemGlobalGet('diffSentinel'), 1)
endfunction
unittestRunTest('testDiffSentinel')


function testDiffLines():
    newline = stringFromCharCode(10)
    left = '1' + newline + '2' + newline + '3'
    right = '1' + newline + '3' + newline + '4'
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Identical', 'lines': ['1']}, \
            {'type': 'Remove', 'lines': ['2']}, \
            {'type': 'Identical', 'lines': ['3']}, \
            {'type': 'Add', 'lines': ['4']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines')


function testDiffLines_array():
    newline = stringFromCharCode(10)
    left = ['1', '2' + newline + '3']
    right = ['1' + newline + '3', '4']
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Identical', 'lines': ['1']}, \
            {'type': 'Remove', 'lines': ['2']}, \
            {'type': 'Identical', 'lines': ['3']}, \
            {'type': 'Add', 'lines': ['4']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_array')


function testDiffLines_identical():
    newline = stringFromCharCode(10)
    left = '1' + newline + '2' + newline + '3'
    right = left
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Identical', 'lines': ['1', '2', '3']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_identical')


function testDiffLines_total():
    newline = stringFromCharCode(10)
    left = '1' + newline + '2' + newline + '3'
    right = '4' + newline + '5' + newline + '6'
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Remove', 'lines': ['1', '2', '3']}, \
            {'type': 'Add', 'lines': ['4', '5', '6']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_total')


function testDiffLines_removeStart():
    newline = stringFromCharCode(10)
    left = '1' + newline + '2' + newline + '3' + newline + '4'
    right = '3' + newline + '4'
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Remove', 'lines': ['1', '2']}, \
            {'type': 'Identical', 'lines': ['3', '4']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_removeStart')


function testDiffLines_addStart():
    newline = stringFromCharCode(10)
    left = '3' + newline + '4'
    right = '1' + newline + '2' + newline + '3' + newline + '4'
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Add', 'lines': ['1', '2']}, \
            {'type': 'Identical', 'lines': ['3', '4']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_addStart')


function testDiffLines_removeEnd():
    newline = stringFromCharCode(10)
    left = '1' + newline + '2' + newline + '3' + newline + '4'
    right = '1' + newline + '2'
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Identical', 'lines': ['1', '2']}, \
            {'type': 'Remove', 'lines': ['3', '4']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_removeEnd')


function testDiffLines_addEnd():
    newline = stringFromCharCode(10)
    left = '1' + newline + '2'
    right = '1' + newline + '2' + newline + '3' + newline + '4'
    unittestDeepEqual( \
        diffLines(left, right), \
        [ \
            {'type': 'Identical', 'lines': ['1', '2']}, \
            {'type': 'Add', 'lines': ['3', '4']} \
        ] \
    )
endfunction
unittestRunTest('testDiffLines_addEnd')
